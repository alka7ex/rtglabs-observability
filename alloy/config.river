// OTLP Receiver: Receives metrics, traces, and logs from your Go applications via OTLP.
otelcol.receiver.otlp "default" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }
  
  output {
    metrics = [otelcol.processor.batch.default.input]
    logs    = [otelcol.processor.batch.default.input]
    traces  = [otelcol.processor.batch.default.input]
  }
}

// Prometheus Scrape: Scrapes Prometheus metrics directly from your Go applications.
prometheus.scrape "goapps" {
  targets = [
    {"__address__" = "goapp1:8080"},
    {"__address__" = "goapp2:8080"},
    {"__address__" = "goapp3:8080"},
  ]
  job_name = "goapps"
  scrape_interval = "15s"
  metrics_path = "/metrics"
  
  forward_to = [prometheus.remote_write.prometheus.receiver]
}

// Batch Processor: Batches telemetry data before sending it to exporters for efficiency.
otelcol.processor.batch "default" {
  output {
    metrics = [otelcol.exporter.prometheus.default.input]
    logs    = [otelcol.exporter.loki.default.input]
    traces  = [otelcol.exporter.otlp.tempo.input]
  }
}

// Loki Exporter: Sends logs to Grafana Cloud Loki.
otelcol.exporter.loki "default" {
  client {
    url = "https://logs-prod3.grafana.net"
    
    basic_auth {
      username = env("GRAFANA_CLOUD_LOKI_USERNAME")
      password = env("GRAFANA_CLOUD_API_KEY")
    }
  }
}

// Tempo Exporter: Sends traces to Grafana Cloud Tempo.
otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "https://tempo-prod10.grafana.net:443"
    tls {
      insecure = false
    }
    auth {
      authenticator = otelcol.auth.basic.tempo.handler
    }
  }
}

otelcol.auth.basic "tempo" {
  username = env("GRAFANA_CLOUD_TEMPO_USERNAME")
  password = env("GRAFANA_CLOUD_API_KEY")
}

// Prometheus Exporter: Converts OTEL metrics to Prometheus format
otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.prometheus.receiver]
}

// Prometheus Remote Write: Sends metrics to Grafana Cloud Prometheus.
prometheus.remote_write "prometheus" {
  endpoint {
    url = "https://prometheus-prod-13.grafana.net/api/prom/push"
    basic_auth {
      username = env("GRAFANA_CLOUD_PROM_USERNAME")
      password = env("GRAFANA_CLOUD_API_KEY")
    }
  }
}
