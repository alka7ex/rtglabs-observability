version: '3.8'
services:
  alloy:
    build:
      context: ./alloy
      dockerfile: Dockerfile
    container_name: alloy
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "9090:9090" # Alloy's own metrics/debug UI
    environment:
      - GRAFANA_CLOUD_LOKI_USERNAME=${GRAFANA_CLOUD_LOKI_USERNAME}
      - GRAFANA_CLOUD_LOKI_PASSWORD=${GRAFANA_CLOUD_LOKI_PASSWORD}
      - GRAFANA_CLOUD_PROM_USERNAME=${GRAFANA_CLOUD_PROM_USERNAME}
      - GRAFANA_CLOUD_PROM_PASSWORD=${GRAFANA_CLOUD_PROM_PASSWORD}
    networks:
      - coolify
    labels:
      - coolify.managed=true
      - coolify.applicationId=17
      - coolify.type=application

  node_exporter:
    image: prom/node-exporter:v1.7.0
    container_name: node_exporter
    restart: unless-stopped
    # REMOVED network_mode: host - this was causing the sudo issues
    ports:
      - "9100:9100"  # Expose node_exporter port instead of host mode
    volumes:
      # More restrictive volume mounts to prevent permission issues
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/run/docker.sock)($|/)'
      - '--web.listen-address=:9100'
    networks:
      - coolify
    labels:
      - coolify.managed=true
      - coolify.applicationId=18
      - coolify.type=service

  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0
    container_name: postgres_exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=${DATA_SOURCE_NAME}
    networks:
      - coolify
    labels:
      - coolify.managed=true
      - coolify.applicationId=19
      - coolify.type=service

networks:
  coolify:
    external: true
